apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'



android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":entities")
    api project(":domain")

    //kotlin
    implementation(Kotlin.kotlin_stdlib_jdk)
    implementation(Kotlin.kotlin_stdlib)
    implementation(Kotlin.core_ktx)
    implementation(Kotlin.kotlin_reflect)

    //Androidx
    implementation(Androidx.appcompat)
    implementation(Androidx.fragment)
    implementation(Androidx.cardview)
    implementation(Androidx.recyclerview)
    implementation(Androidx.multidex)
    implementation(Androidx.lifecycle)
    implementation(Androidx.legacy)
    kapt(Androidx.appcompat)
    implementation(Androidx.ifecycle_reactivestreams)
    implementation(Androidx.lifecycle_common)
    implementation(Androidx.lifecycle_runtime)
    implementation(Androidx.lifecycle_livedata)
    implementation(Androidx.constraintlayout)
    implementation(Androidx.navigation_fragment)
    implementation(Androidx.navigation_ui)
    implementation(Androidx.room_runtime)
    implementation(Androidx.room_ktx)
    kapt(Androidx.room_compiler_kapt)
    implementation(Androidx.lifecycle_viewmodel)

    //Hilt
    implementation(Hilt.hilt_android)
    implementation(Hilt.viewmodel)
    kapt(Hilt.kapt_hilt_android)
    kapt(Hilt.kapt_hilt_compiler)

  /*  //test
    testImplementation(Test.junit)
    androidTestImplementation(Test.runner)
    androidTestImplementation(Test.espresso_core)
    testImplementation(Test.mockito)
    implementation(Test.core_testing)
    implementation(Test.mockito_kotlin)*/
}